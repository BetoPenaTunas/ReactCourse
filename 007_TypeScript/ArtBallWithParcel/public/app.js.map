{"mappings":"MAGI,MAA4BA,OAAtBC,EAAMC,GAACC,EAAEC,IAACC,EAAGC,IAACC,EAAGC,IAACC,GAAMC,KACxBC,EAAS,EAAER,EAEXS,EAAmBC,IACrB,MAAMC,EAAOb,IAASU,E,OACdI,EAAEF,EAAON,EAAIO,GAASE,EAAEH,EAAOJ,EAAIK,G,GCJ9CV,IAAEa,GAAKP,KACNQ,EAASC,SAASC,eAAc,WAGtCF,EAAOG,MAAMH,EAAOI,YACpBJ,EAAOK,OAAOL,EAAOM,aAErB,MAAKH,MAAEI,EAAKF,OAACG,GAAUR,EAIjBS,EAAQ,GAAIV,EAAIQ,EAAMC,GAAS,EAC/BE,EAASV,EAAOW,WAAU,MAW1BC,EAAI,KACN,MAAOf,EAAEgB,EAAGf,EAAEgB,GAAIpB,EAAkBe,IAC7BZ,EAAEkB,EAAGjB,EAAEkB,GAAItB,EAAkBe,GAV9B,EAAII,EAAUC,EAAUC,EAAUC,KACxC,MAAMC,EAAGC,GAAE,CAAGX,EAAM,EAAEC,EAAO,GAC7BE,EAAQS,YACRT,EAAQU,OAAOH,EAAGJ,EAAGK,EAAGJ,GACxBJ,EAAQW,OAAOJ,EAAGF,EAAGG,EAAGF,GACxBN,EAAQY,QAAM,EAMdC,CAAKV,EAAGC,EAAGC,EAAGC,EAAE,E,IAIhB,IAAIQ,EAAE,EAAEC,EAAK,EAAEC,EAAG,GAAGF,EAAE,MAAQA,EAAEC,GAAMC,EACvCC,WAAWf,EAAKa,E","sources":["code/randomCircle.ts","code/app.ts"],"sourcesContent":["//---> HACIENDO OBJECT DESTRUCTURING con el objeto Math <---\r\n    //Es decir, obteniendo algunas propiedades de \r\n    //Algunas propiedades son funciones y otras CONSTANTES \r\n    const{random,PI,min,cos,sin} =Math\r\n    const maxValue=2*PI //2pi= Lo que mide una circunferencia 2PI  \r\n\r\n    const randomPointCircle=(radius:number)=>{\r\n        const angle1=random()*maxValue //Ángulo entre 0 y 2PI\r\n        return {x:radius*cos(angle1), y:radius*sin(angle1)} //Convirtiendo a coordenadas cartesianas\r\n    }\r\n\r\n    export{randomPointCircle}","import \"./main.css\";\r\nimport {randomPointCircle} from \"./randomCircle\"\r\n// import{randomPointInCircle} from \"./randomCircle\"\r\n\r\nconst {min}=Math\r\nconst canvas = document.getElementById('drawing') as HTMLCanvasElement\r\n\r\n// ---> Para darle calidad HD\r\ncanvas.width=canvas.clientWidth\r\ncanvas.height=canvas.clientHeight\r\n\r\nconst {width,height} = canvas\r\n\r\n//Calculando el radio \r\n//0.8 de la cosa más chiquita sobre 2\r\nconst radius=(0.8*min(width,height))/2  \r\nconst context =canvas.getContext(\"2d\")\r\n\r\n//Dibujando la línea, \r\nconst draw = (x1:number,y1:number,x2:number,y2:number)=>{\r\n    const[dx,dy]=[width/2,height/2]\r\n    context.beginPath()\r\n    context.moveTo(dx+x1,dy-y1)\r\n    context.lineTo(dx+x2,dy-y2)\r\n    context.stroke()\r\n}\r\n\r\nconst loop =()=>{\r\n    const {x:x1,y:y1}=randomPointCircle(radius)\r\n    const {x:x2,y:y2}=randomPointCircle(radius)\r\n    draw(x1,y1,x2,y2)\r\n}\r\n\r\n//Mando a llamar a setTimeOut() cada 30 segundos\r\nfor(let i=0,time=0,dt=30;i<5_000;++i,time+=dt){\r\n    setTimeout(loop,time)\r\n}"],"names":["random","$b17b59a701191e9c$var$random","PI","$b17b59a701191e9c$var$PI","min","$b17b59a701191e9c$var$min","cos","$b17b59a701191e9c$var$cos","sin","$b17b59a701191e9c$var$sin","Math","$b17b59a701191e9c$var$maxValue","$b17b59a701191e9c$export$da154e6a8eb66502","radius","angle1","x","y","$b7f2f76dcf9c52f3$var$min","$b7f2f76dcf9c52f3$var$canvas","document","getElementById","width","clientWidth","height","clientHeight","$b7f2f76dcf9c52f3$var$width","$b7f2f76dcf9c52f3$var$height","$b7f2f76dcf9c52f3$var$radius","$b7f2f76dcf9c52f3$var$context","getContext","$b7f2f76dcf9c52f3$var$loop","x1","y1","x2","y2","dx","dy","beginPath","moveTo","lineTo","stroke","$b7f2f76dcf9c52f3$var$draw","i","time","dt","setTimeout"],"version":3,"file":"app.js.map"}